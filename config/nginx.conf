worker_processes  1;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Hardening
    proxy_hide_header X-Powered-By;
    fastcgi_hide_header X-Powered-By;
    server_tokens off;


    # Enable gzip compression by default
    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;
    gzip_vary on;
    gzip_disable "msie6";

    # Forward the cloudfront scheme from upstream
    map "$http_cloudfront_forwarded_proto$http_x_forwarded_proto" $forwarded_scheme {
         default off;
         "~*(https)" on;
     }

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;

        # Increase proxy buffers for large requests
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Upload limit
        client_max_body_size 50m;
        client_body_buffer_size 128k;

        root /usr/src/wordpress;
        index index.php;

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
        location ~ ^/wp-content {
            root /var/www;
            expires 7d;
            add_header Cache-Control "public";
        }

	# Caching setup (focused on SuperCache) based on https://www.nginx.com/blog/9-tips-for-improving-wordpress-performance-with-nginx/#wp-super-cache

	# POST requests and URLs with a query string should always go to PHP
	if ($request_method = POST) {
	    set $cache_uri 'null cache';
	}  
	if ($query_string != "") {
	    set $cache_uri 'null cache';
	}   

	# Don't cache URIs containing the following segments
	if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php
	    		  |wp-.*.php|/feed/|index.php|wp-comments-popup.php
	    		  |wp-links-opml.php|wp-locations.php |sitemap(_index)?.xml
	    		  |[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
	    set $cache_uri 'null cache';
	}  
	    
	# Don't use the cache for logged-in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+
	    		 |wp-postpass|wordpress_logged_in") {
	    set $cache_uri 'null cache';
	}

	# Use cached or actual file if it exists, otherwise pass request to WordPress
	location / {
	    try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html 
	    	  $uri $uri/ /index.php?$args;
	}    

	# If you don't want to check for for SuperCache use this
        # location / {
        #    # First attempt to serve request as file, then
        #    # as directory, then fall back to index.php
        #    try_files $uri $uri/ /index.php?$args;
        # }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            #fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;

            fastcgi_index index.php;
            fastcgi_pass 127.0.0.1:9000;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Forward the scheme from upstream
            fastcgi_param HTTPS $forwarded_scheme;
        }

	# Cache static files for as long as possible
	location ~* \.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
	    expires max;
            # log_not_found off;
	    # access_log off;
	}

        # deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
}
